name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Build Docker Image
      run: |
        docker build . --file Dockerfile --pull -t ${{ secrets.DOCKER_REGISTRY }}
        docker push ${{ secrets.DOCKER_REGISTRY }}

  test:
    runs-on: self-hosted
    needs: build
    steps:
    - name: Run Tests
      run: |
        docker pull ${{ secrets.DOCKER_REGISTRY }}
        docker run --rm ${{ secrets.DOCKER_REGISTRY }} bash -c "coverage run --source='core' --omit='*migrations*,*tests*' manage.py test -v 2 core && coverage report"

  deploy:
    runs-on: self-hosted
    needs: [build, test]
    steps:
      - name: Deploy Stage
        run: |
          docker pull ${{ secrets.DOCKER_REGISTRY }}
          docker run --rm ${{ secrets.DOCKER_REGISTRY }} bash -c 'mkdir /root/.ssh/ && echo "${{ secrets.SSH_PRIVATE_KEY }}" > /root/.ssh/id_rsa && echo "${{ secrets.SSH_PUBLIC_KEY }}" > /root/.ssh/id_rsa.pub && chmod =600 ~/.ssh/id_rsa &&
                                                                  pip install -r ansible/requirements.txt && ansible-playbook -i ansible/inventory -u ansible -v ansible/install.yml -e "web_server_name=${{ secrets.web_server_name }} host=${{ secrets.host }} image_name=${{ secrets.image_name }} image=${{ secrets.DOCKER_REGISTRY }} service_name=${{ secrets.service_name }} service_port=${{ secrets.service_port }} db_host=${{ secrets.db_host }} MIS_URL=${{ secrets.MIS_URL }} MIS_TOKEN=${{ secrets.MIS_TOKEN }} PASSWORD=${{ secrets.DB_PASSWORD }} sentry_url=${{ secrets.sentry_url }}"'
